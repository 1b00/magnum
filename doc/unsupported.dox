/*
    This file is part of Magnum.

    Copyright © 2010, 2011, 2012, 2013 Vladimír Vondruš <mosra@centrum.cz>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

/** @page unsupported Unsupported OpenGL features

Some functionality, which is either soon-to-be deprecated or isn't proven to
add any performance gains, is not supported in %Magnum.

@section unsupported-features Unsupported features

-   Line and polygon smoothing (`GL_LINE_SMOOTH`, `GL_POLYGON_SMOOTH`) and
    related functions are not supported, as the driver might do it in software
    with serious performance drops. Multisampling is far superior solution.
-   Fixed precision data types (`GL_FIXED` in OpenGL ES) are not supported, as
    they occupy the same memory as floats and they aren't faster than floats on
    current hardware anymore.
-   Shader compiler is assumed to be present (`GL_SHADER_COMPILER` returning
    true), as all desktop GL implementations and also ES3 are required to
    support it.

@section unsupported-extensions Unsupported extensions

- @extension{INTEL,map_texture} negatively affects texture access performance.
  Combination of buffer mapping and pixel buffers might be of the same or
  better performance, without affecting texture access speed.
- @extension{NV,draw_texture} can be done with framebuffer blitting and
  doesn't make any full-screen postprocessing easier, as shaders are excluded.

*/
